Index: node_modules/simple-jekyll-search/src/utils.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/src/utils.test.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/src/utils.test.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,22 +0,0 @@
-'use strict'
-const {equal, ok} = require('assert')
-test('utils', function () {
-  var utils = require('./utils')
-
-  test('#merge', function () {
-    test('merges objects', function () {
-      var defaultOptions = {foo: '', bar: ''}
-      var options = {bar: 'overwritten'}
-      var mergedOptions = utils.merge(defaultOptions, options)
-
-      equal(mergedOptions.foo, defaultOptions.foo)
-      equal(mergedOptions.bar, options.bar)
-    })
-  })
-
-  test('#isJSON', function () {
-    test('returns true if is JSON object', function () {
-      ok(utils.isJSON({foo: 'bar'}))
-    })
-  })
-})
Index: node_modules/simple-jekyll-search/src/Templater.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/src/Templater.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/src/Templater.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,28 +0,0 @@
-'use strict'
-module.exports = {
-  compile: compile,
-  setOptions: setOptions
-}
-
-var options = {}
-options.pattern = /\{(.*?)\}/g
-options.template = ''
-options.middleware = function () {}
-
-function setOptions (_options) {
-  options.pattern = _options.pattern || options.pattern
-  options.template = _options.template || options.template
-  if (typeof _options.middleware === 'function') {
-    options.middleware = _options.middleware
-  }
-}
-
-function compile (data) {
-  return options.template.replace(options.pattern, function (match, prop) {
-    var value = options.middleware(prop, data[prop], options.template)
-    if (value !== undefined) {
-      return value
-    }
-    return data[prop] || match
-  })
-}
Index: node_modules/simple-jekyll-search/src/OptionsValidator.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/src/OptionsValidator.test.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/src/OptionsValidator.test.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,42 +0,0 @@
-/* globals test */
-'use strict'
-const OptionsValidator = require('./OptionsValidator.js')
-const {equal} = require('assert')
-test('OptionsValidator', function () {
-  test('can be instanciated with options', function () {
-    var requiredOptions = ['foo', 'bar']
-    var optionsValidator = new OptionsValidator({
-      required: requiredOptions
-    })
-
-    equal(optionsValidator.getRequiredOptions(), requiredOptions)
-  })
-
-  test('#validate', function () {
-    test('returns empty errors array for valid options', function () {
-      var requiredOptions = ['foo', 'bar']
-      var optionsValidator = new OptionsValidator({
-        required: requiredOptions
-      })
-
-      var errors = optionsValidator.validate({
-        foo: '',
-        bar: ''
-      })
-
-      equal(errors.length, 0)
-    })
-    test('returns array with errors for invalid options', function () {
-      var requiredOptions = ['foo', 'bar']
-      var optionsValidator = new OptionsValidator({
-        required: requiredOptions
-      })
-
-      var errors = optionsValidator.validate({
-        foo: ''
-      })
-
-      equal(errors.length, 1)
-    })
-  })
-})
Index: node_modules/simple-jekyll-search/.npmignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/.npmignore	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/.npmignore	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,8 +0,0 @@
-node_modules
-bower_components
-_site
-example
-about.md
-_config.yml
-index.html
-.sass-cache
Index: node_modules/simple-jekyll-search/src/SearchStrategies/LiteralSearchStrategy.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/src/SearchStrategies/LiteralSearchStrategy.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/src/SearchStrategies/LiteralSearchStrategy.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,12 +0,0 @@
-'use strict'
-module.exports = new LiteralSearchStrategy()
-
-function LiteralSearchStrategy () {
-  this.matches = function (string, crit) {
-    if (typeof string !== 'string') {
-      return false
-    }
-    string = string.trim()
-    return string.toLowerCase().indexOf(crit.toLowerCase()) >= 0
-  }
-}
Index: node_modules/simple-jekyll-search/src/Repository.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/src/Repository.test.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/src/Repository.test.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,52 +0,0 @@
-/* globals test beforeEach afterEach */
-'use strict'
-
-const {deepEqual} = require('assert')
-
-var barElement = {title: 'bar', content: 'bar'}
-var almostBarElement = {title: 'almostbar', content: 'almostbar'}
-var loremElement = {title: 'lorem', content: 'lorem ipsum'}
-
-var data = [barElement, almostBarElement, loremElement]
-
-test('Repository', function () {
-  var repository
-
-  test('finds a simple string', function () {
-    deepEqual(repository.search('bar'), [barElement, almostBarElement])
-  })
-
-  test('limits the search results to one even if found more', function () {
-    repository.setOptions({limit: 1})
-    deepEqual(repository.search('bar'), [barElement])
-  })
-
-  test('finds a long string', function () {
-    deepEqual(repository.search('lorem ipsum'), [loremElement])
-  })
-
-  test('finds a fuzzy string', function () {
-    repository.setOptions({fuzzy: true})
-    deepEqual(repository.search('lrm ism'), [loremElement])
-  })
-
-  test('returns empty search results when an empty criteria is provided', function () {
-    deepEqual(repository.search(''), [])
-  })
-
-  test('excludes items from search', function () {
-    repository.setOptions({
-      exclude: ['almostbar']
-    })
-    deepEqual(repository.search('almostbar'), [])
-  })
-
-  beforeEach(function () {
-    repository = require('./Repository.js')
-    repository.put(data)
-  })
-
-  afterEach(function () {
-    repository.clear()
-  })
-})
Index: node_modules/fuzzysearch/test/fuzzysearch.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/fuzzysearch/test/fuzzysearch.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/fuzzysearch/test/fuzzysearch.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,14 +0,0 @@
-'use strict';
-
-var test = require('tape');
-var fuzzysearch = require('..');
-
-test('fuzzysearch should match expectations', function (t) {
-  t.equal(fuzzysearch('car', 'cartwheel'), true);
-  t.equal(fuzzysearch('cwhl', 'cartwheel'), true);
-  t.equal(fuzzysearch('cwheel', 'cartwheel'), true);
-  t.equal(fuzzysearch('cartwheel', 'cartwheel'), true);
-  t.equal(fuzzysearch('cwheeel', 'cartwheel'), false);
-  t.equal(fuzzysearch('lw', 'cartwheel'), false);
-  t.end();
-});
Index: node_modules/simple-jekyll-search/.jshintrc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/.jshintrc	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/.jshintrc	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,24 +0,0 @@
-{
-  "camelcase": true,
-  "asi": true,
-  "curly": true,
-  "eqeqeq": true,
-  "freeze": true,
-  "indent": 2,
-  "newcap": false,
-  "quotmark": "single",
-  "maxdepth": 3,
-  "maxstatements": 50,
-  "maxlen": 100,
-  "eqnull": true,
-  "funcscope": true,
-  "strict": true,
-  "undef": true,
-  "unused": true,
-  "globals": {
-    "ActiveXObject": true
-  },
-  "browser": true,
-  "node": true,
-  "browserify": true
-}
\ No newline at end of file
Index: node_modules/simple-jekyll-search/src/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/src/index.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/src/index.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,115 +0,0 @@
-'use strict'
-;(function (window, document) {
-  'use strict'
-
-  var options = {
-    searchInput: null,
-    resultsContainer: null,
-    json: [],
-    searchResultTemplate: '<li><a href="{url}" title="{desc}">{title}</a></li>',
-    templateMiddleware: function () {},
-    noResultsText: 'No results found',
-    limit: 10,
-    fuzzy: false,
-    exclude: []
-  }
-
-  var requiredOptions = ['searchInput', 'resultsContainer', 'json']
-
-  var templater = require('./Templater')
-  var repository = require('./Repository')
-  var jsonLoader = require('./JSONLoader')
-  var optionsValidator = require('./OptionsValidator')({
-    required: requiredOptions
-  })
-  var utils = require('./utils')
-
-  /*
-    Public API
-  */
-  window.SimpleJekyllSearch = function SimpleJekyllSearch (_options) {
-    var errors = optionsValidator.validate(_options)
-    if (errors.length > 0) {
-      throwError('You must specify the following required options: ' + requiredOptions)
-    }
-
-    options = utils.merge(options, _options)
-
-    templater.setOptions({
-      template: options.searchResultTemplate,
-      middleware: options.templateMiddleware
-    })
-
-    repository.setOptions({
-      fuzzy: options.fuzzy,
-      limit: options.limit
-    })
-
-    if (utils.isJSON(options.json)) {
-      initWithJSON(options.json)
-    } else {
-      initWithURL(options.json)
-    }
-  }
-
-  // for backwards compatibility
-  window.SimpleJekyllSearch.init = window.SimpleJekyllSearch
-
-  if (typeof window.SimpleJekyllSearchInit === 'function') {
-    window.SimpleJekyllSearchInit.call(this, window.SimpleJekyllSearch)
-  }
-
-  function initWithJSON (json) {
-    repository.put(json)
-    registerInput()
-  }
-
-  function initWithURL (url) {
-    jsonLoader.load(url, function (err, json) {
-      if (err) {
-        throwError('failed to get JSON (' + url + ')')
-      }
-      initWithJSON(json)
-    })
-  }
-
-  function emptyResultsContainer () {
-    options.resultsContainer.innerHTML = ''
-  }
-
-  function appendToResultsContainer (text) {
-    options.resultsContainer.innerHTML += text
-  }
-
-  function registerInput () {
-    options.searchInput.addEventListener('keyup', function (e) {
-      var key = e.which
-      if (isWhitelistedKey(key)) {
-        emptyResultsContainer()
-        var query = e.target.value
-        if (isValidQuery(query)) {
-          render(repository.search(query))
-        }
-      }
-    })
-  }
-
-  function render (results) {
-    if (results.length === 0) {
-      return appendToResultsContainer(options.noResultsText)
-    }
-    for (var i = 0; i < results.length; i++) {
-      appendToResultsContainer(templater.compile(results[i]))
-    }
-  }
-
-  function isValidQuery (query) {
-    return query && query.length > 0
-  }
-
-  function isWhitelistedKey (key) {
-    return [13, 16, 20, 37, 38, 39, 40, 91].indexOf(key) === -1
-  }
-
-  function throwError (message) { throw new Error('SimpleJekyllSearch --- ' + message) }
-})(window, document)
Index: node_modules/simple-jekyll-search/dest/simple-jekyll-search.min.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/dest/simple-jekyll-search.min.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/dest/simple-jekyll-search.min.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,1 +0,0 @@
-!function(e){"use strict";function t(e){h.put(e),r()}function n(e){d.load(e,function(n,i){n&&s("failed to get JSON ("+e+")"),t(i)})}function i(){c.resultsContainer.innerHTML=""}function l(e){c.resultsContainer.innerHTML+=e}function r(){c.searchInput.addEventListener("keyup",function(e){var t=e.which;if(a(t)){i();var n=e.target.value;o(n)&&u(h.search(n))}})}function u(e){if(0===e.length)return l(c.noResultsText);for(var t=0;t<e.length;t++)l(p.compile(e[t]))}function o(e){return e&&e.length>0}function a(e){return-1===[13,16,20,37,38,39,40,91].indexOf(e)}function s(e){throw new Error("SimpleJekyllSearch --- "+e)}var c={searchInput:null,resultsContainer:null,json:[],searchResultTemplate:'<li><a href="{url}" title="{desc}">{title}</a></li>',templateMiddleware:function(){},noResultsText:"No results found",limit:10,fuzzy:!1,exclude:[]},f=["searchInput","resultsContainer","json"],p=require("./Templater"),h=require("./Repository"),d=require("./JSONLoader"),m=require("./OptionsValidator")({required:f}),S=require("./utils");e.SimpleJekyllSearch=function(e){var i=m.validate(e);i.length>0&&s("You must specify the following required options: "+f),c=S.merge(c,e),p.setOptions({template:c.searchResultTemplate,middleware:c.templateMiddleware}),h.setOptions({fuzzy:c.fuzzy,limit:c.limit}),S.isJSON(c.json)?t(c.json):n(c.json)},e.SimpleJekyllSearch.init=e.SimpleJekyllSearch,"function"==typeof e.SimpleJekyllSearchInit&&e.SimpleJekyllSearchInit.call(this,e.SimpleJekyllSearch)}(window,document);
\ No newline at end of file
Index: node_modules/simple-jekyll-search/src/SearchStrategies/FuzzySearchStrategy.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/src/SearchStrategies/FuzzySearchStrategy.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/src/SearchStrategies/FuzzySearchStrategy.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,10 +0,0 @@
-'use strict'
-var fuzzysearch = require('fuzzysearch')
-
-module.exports = new FuzzySearchStrategy()
-
-function FuzzySearchStrategy () {
-  this.matches = function (string, crit) {
-    return fuzzysearch(crit, string)
-  }
-}
Index: node_modules/fuzzysearch/.jshintignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/fuzzysearch/.jshintignore	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/fuzzysearch/.jshintignore	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,2 +0,0 @@
-node_modules
-dist
Index: node_modules/simple-jekyll-search/src/utils.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/src/utils.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/src/utils.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,27 +0,0 @@
-'use strict'
-module.exports = {
-  merge: merge,
-  isJSON: isJSON
-}
-
-function merge (defaultParams, mergeParams) {
-  var mergedOptions = {}
-  for (var option in defaultParams) {
-    mergedOptions[option] = defaultParams[option]
-    if (mergeParams[option] !== undefined) {
-      mergedOptions[option] = mergeParams[option]
-    }
-  }
-  return mergedOptions
-}
-
-function isJSON (json) {
-  try {
-    if (json instanceof Object && JSON.parse(JSON.stringify(json))) {
-      return true
-    }
-    return false
-  } catch (e) {
-    return false
-  }
-}
Index: node_modules/simple-jekyll-search/LICENSE.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/LICENSE.md	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/LICENSE.md	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,21 +0,0 @@
-The MIT License (MIT)
-
-Copyright (c) 2015 Christian Fei
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
\ No newline at end of file
Index: node_modules/simple-jekyll-search/bower.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/bower.json	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/bower.json	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,26 +0,0 @@
-{
-  "name": "simple-jekyll-search",
-  "version": "1.0.7",
-  "homepage": "http://christian-fei.github.io/Simple-Jekyll-Search/",
-  "authors": [
-    "Christian Fei"
-  ],
-  "description": "Simple Jekyll site search using javascript and json",
-  "main": "dest/jekyll-search.js",
-  "keywords": [
-    "search",
-    "jekyll",
-    "javascript",
-    "json",
-    "simple"
-  ],
-  "license": "MIT",
-  "ignore": [
-    "*",
-    "!dest/jekyll-search.js",
-    "!README.md"
-  ],
-  "moduleType": [
-    "globals"
-  ]
-}
Index: node_modules/fuzzysearch/.npmignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/fuzzysearch/.npmignore	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/fuzzysearch/.npmignore	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,1 +0,0 @@
-node_modules
Index: node_modules/simple-jekyll-search/src/Repository.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/src/Repository.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/src/Repository.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,99 +0,0 @@
-'use strict'
-module.exports = {
-  put: put,
-  clear: clear,
-  get: get,
-  search: search,
-  setOptions: setOptions
-}
-
-var FuzzySearchStrategy = require('./SearchStrategies/FuzzySearchStrategy')
-var LiteralSearchStrategy = require('./SearchStrategies/LiteralSearchStrategy')
-
-var data = []
-var opt = {}
-opt.fuzzy = false
-opt.limit = 10
-opt.searchStrategy = opt.fuzzy ? FuzzySearchStrategy : LiteralSearchStrategy
-
-function put (data) {
-  if (isObject(data)) {
-    return addObject(data)
-  }
-  if (isArray(data)) {
-    return addArray(data)
-  }
-  return undefined
-}
-function clear () {
-  data.length = 0
-  return data
-}
-
-function get () {
-  return data
-}
-
-function isObject (obj) { return !!obj && Object.prototype.toString.call(obj) === '[object Object]' }
-function isArray (obj) { return !!obj && Object.prototype.toString.call(obj) === '[object Array]' }
-
-function addObject (_data) {
-  data.push(_data)
-  return data
-}
-
-function addArray (_data) {
-  var added = []
-  for (var i = 0; i < _data.length; i++) {
-    if (isObject(_data[i])) {
-      added.push(addObject(_data[i]))
-    }
-  }
-  return added
-}
-
-function search (crit) {
-  if (!crit) {
-    return []
-  }
-  return findMatches(data, crit, opt.searchStrategy, opt)
-}
-
-function setOptions (_opt) {
-  opt = _opt || {}
-
-  opt.fuzzy = _opt.fuzzy || false
-  opt.limit = _opt.limit || 10
-  opt.searchStrategy = _opt.fuzzy ? FuzzySearchStrategy : LiteralSearchStrategy
-}
-
-function findMatches (data, crit, strategy, opt) {
-  var matches = []
-  for (var i = 0; i < data.length && matches.length < opt.limit; i++) {
-    var match = findMatchesInObject(data[i], crit, strategy, opt)
-    if (match) {
-      matches.push(match)
-    }
-  }
-  return matches
-}
-
-function findMatchesInObject (obj, crit, strategy, opt) {
-  for (var key in obj) {
-    if (!isExcluded(obj[key], opt.exclude) && strategy.matches(obj[key], crit)) {
-      return obj
-    }
-  }
-}
-
-function isExcluded (term, excludedTerms) {
-  var excluded = false
-  excludedTerms = excludedTerms || []
-  for (var i = 0; i < excludedTerms.length; i++) {
-    var excludedTerm = excludedTerms[i]
-    if (!excluded && new RegExp(term).test(excludedTerm)) {
-      excluded = true
-    }
-  }
-  return excluded
-}
Index: node_modules/simple-jekyll-search/src/Templater.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/src/Templater.test.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/src/Templater.test.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,58 +0,0 @@
-/* globals test beforeEach */
-'use strict'
-const {equal} = require('assert')
-
-test('Templater', function () {
-  var templater
-
-  test('renders the template with the provided data', function () {
-    equal(templater.compile({foo: 'bar'}), 'bar')
-
-    templater.setOptions({
-      template: '<a href="{url}">url</a>'
-    })
-
-    equal(templater.compile({url: 'http://google.com'}), '<a href="http://google.com">url</a>')
-  })
-
-  test('replaces not found properties with the original pattern', function () {
-    var template = '{foo}'
-    templater.setOptions({
-      template: template
-    })
-    equal(templater.compile({x: 'bar'}), template)
-  })
-
-  test('allows custom patterns to be set', function () {
-    templater.setOptions({
-      template: '{{foo}}',
-      pattern: /\{\{(.*?)\}\}/g
-    })
-    equal(templater.compile({foo: 'bar'}), 'bar')
-  })
-
-  test('middleware', function () {
-    test('middleware gets parameter to return new replacement', function () {
-      templater.setOptions({
-        template: '{foo} - {bar}',
-        middleware: function (prop, value, template) {
-          if (prop === 'bar') {
-            return value.replace(/^\//, '')
-          }
-        }
-      })
-
-      var compiled = templater.compile({foo: 'foo', bar: '/leading/slash'})
-
-      equal(compiled, 'foo - leading/slash')
-    })
-  })
-
-  beforeEach(function () {
-    templater = require('./Templater.js')
-    templater.setOptions({
-      template: '{foo}',
-      pattern: /\{(.*?)\}/g
-    })
-  })
-})
Index: node_modules/simple-jekyll-search/src/JSONLoader.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/src/JSONLoader.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/src/JSONLoader.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,27 +0,0 @@
-'use strict'
-module.exports = {
-  load: load
-}
-
-function load (location, callback) {
-  var xhr = getXHR()
-  xhr.open('GET', location, true)
-  xhr.onreadystatechange = createStateChangeListener(xhr, callback)
-  xhr.send()
-}
-
-function createStateChangeListener (xhr, callback) {
-  return function () {
-    if (xhr.readyState === 4 && xhr.status === 200) {
-      try {
-        callback(null, JSON.parse(xhr.responseText))
-      } catch (err) {
-        callback(err, null)
-      }
-    }
-  }
-}
-
-function getXHR () {
-  return (window.XMLHttpRequest) ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP')
-}
Index: node_modules/simple-jekyll-search/src/SearchStrategies/FuzzySearchStrategy.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/src/SearchStrategies/FuzzySearchStrategy.test.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/src/SearchStrategies/FuzzySearchStrategy.test.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,20 +0,0 @@
-/* globals test */
-'use strict'
-const {equal} = require('assert')
-const FuzzySearchStrategy = require('./FuzzySearchStrategy')
-
-test('FuzzySearchStrategy', function () {
-  test('does not match words that don\'t contain the search criteria', function () {
-    equal(FuzzySearchStrategy.matches('fuzzy', 'fzyyy'), false)
-    equal(FuzzySearchStrategy.matches('react', 'angular'), false)
-
-    equal(FuzzySearchStrategy.matches('what the heck', 'wth?'), false)
-  })
-
-  test('matches words containing the search criteria', function () {
-    equal(FuzzySearchStrategy.matches('fuzzy', 'fzy'), true)
-    equal(FuzzySearchStrategy.matches('react', 'rct'), true)
-
-    equal(FuzzySearchStrategy.matches('what the heck', 'wth'), true)
-  })
-})
Index: node_modules/simple-jekyll-search/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/package.json	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/package.json	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,111 +0,0 @@
-{
-  "_args": [
-    [
-      {
-        "raw": "simple-jekyll-search",
-        "scope": null,
-        "escapedName": "simple-jekyll-search",
-        "name": "simple-jekyll-search",
-        "rawSpec": "",
-        "spec": "latest",
-        "type": "tag"
-      },
-      "/Users/liko/Dropbox/WebstormProjects/blog/likonion.github.io"
-    ]
-  ],
-  "_from": "simple-jekyll-search@latest",
-  "_id": "simple-jekyll-search@1.2.0",
-  "_inCache": true,
-  "_location": "/simple-jekyll-search",
-  "_nodeVersion": "7.8.0",
-  "_npmOperationalInternal": {
-    "host": "packages-12-west.internal.npmjs.com",
-    "tmp": "tmp/simple-jekyll-search-1.2.0.tgz_1491032688876_0.8045494875404984"
-  },
-  "_npmUser": {
-    "name": "christian_fei",
-    "email": "crifei93@gmail.com"
-  },
-  "_npmVersion": "4.2.0",
-  "_phantomChildren": {},
-  "_requested": {
-    "raw": "simple-jekyll-search",
-    "scope": null,
-    "escapedName": "simple-jekyll-search",
-    "name": "simple-jekyll-search",
-    "rawSpec": "",
-    "spec": "latest",
-    "type": "tag"
-  },
-  "_requiredBy": [
-    "#USER",
-    "/"
-  ],
-  "_resolved": "https://registry.npmjs.org/simple-jekyll-search/-/simple-jekyll-search-1.2.0.tgz",
-  "_shasum": "4ecaf3f070b23a7d4b54e35298a987fe702b8f8d",
-  "_shrinkwrap": null,
-  "_spec": "simple-jekyll-search",
-  "_where": "/Users/liko/Dropbox/WebstormProjects/blog/likonion.github.io",
-  "author": {
-    "name": "Christian Fei"
-  },
-  "bugs": {
-    "url": "https://github.com/christian-fei/Simple-Jekyll-Search/issues"
-  },
-  "dependencies": {
-    "fuzzysearch": "^1.0.3"
-  },
-  "description": "Simple Jekyll site search using javascript and json",
-  "devDependencies": {
-    "m.test": "0.0.54",
-    "uglifyjs": "^2.4.10"
-  },
-  "directories": {},
-  "dist": {
-    "shasum": "4ecaf3f070b23a7d4b54e35298a987fe702b8f8d",
-    "tarball": "https://registry.npmjs.org/simple-jekyll-search/-/simple-jekyll-search-1.2.0.tgz"
-  },
-  "gitHead": "6bf147757e8b0b7ac9949ecf53f798523b6d0086",
-  "homepage": "https://github.com/christian-fei/Simple-Jekyll-Search",
-  "ignore": [
-    "*",
-    "!dest/jekyll-search.js",
-    "!README.md"
-  ],
-  "license": "MIT",
-  "main": "dest/jekyll-search.min.js",
-  "maintainers": [
-    {
-      "name": "christian_fei",
-      "email": "crifei93@gmail.com"
-    }
-  ],
-  "name": "simple-jekyll-search",
-  "optionalDependencies": {},
-  "readme": "ERROR: No README data found!",
-  "repository": {
-    "type": "git",
-    "url": "git+https://github.com/christian-fei/Simple-Jekyll-Search.git"
-  },
-  "scripts": {
-    "build": "mkdir -p dest; uglifyjs --compress --mangle --output dest/simple-jekyll-search.min.js src/index.js",
-    "lint": "standard",
-    "prebuild": "npm run lint",
-    "pretest": "npm run lint",
-    "test": "m.test src/**.test.js"
-  },
-  "standard": {
-    "globals": [
-      "test",
-      "beforeEach",
-      "afterEach",
-      "XMLHttpRequest",
-      "ActiveXObject"
-    ],
-    "ignore": [
-      "example",
-      "dest"
-    ]
-  },
-  "version": "1.2.0"
-}
Index: node_modules/fuzzysearch/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/fuzzysearch/README.md	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/fuzzysearch/README.md	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,45 +0,0 @@
-# fuzzysearch
-
-> Tiny and blazing-fast fuzzy search in JavaScript
-
-Fuzzy searching allows for flexibly matching a string with partial input, useful for filtering data very quickly based on lightweight user input.
-
-# Demo
-
-To see `fuzzysearch` in action, head over to [bevacqua.github.io/horsey][3], which is a demo of an autocomplete component that uses `fuzzysearch` to filter out results based on user input.
-
-# Install
-
-From `npm`
-
-```shell
-npm install --save fuzzysearch
-```
-
-# `fuzzysearch(needle, haystack)`
-
-Returns `true` if `needle` matches `haystack` using a fuzzy-searching algorithm. Note that this program doesn't implement _[levenshtein distance][2]_, but rather a simplified version where **there's no approximation**. The method will return `true` only if each character in the `needle` can be found in the `haystack` and occurs after the preceding character.
-
-```js
-fuzzysearch('twl', 'cartwheel') // <- true
-fuzzysearch('cart', 'cartwheel') // <- true
-fuzzysearch('cw', 'cartwheel') // <- true
-fuzzysearch('ee', 'cartwheel') // <- true
-fuzzysearch('art', 'cartwheel') // <- true
-fuzzysearch('eeel', 'cartwheel') // <- false
-fuzzysearch('dog', 'cartwheel') // <- false
-```
-
-An exciting application for this kind of algorithm is to filter options from an autocomplete menu, check out [horsey][3] for an example on how that might look like.
-
-# But! _`RegExp`s...!_
-
-![chart showing abysmal performance for regexp-based implementation][1]
-
-# License
-
-MIT
-
-[1]: https://cloud.githubusercontent.com/assets/934293/6495796/106a61a6-c2ac-11e4-945d-3d1bb066a76e.png
-[2]: http://en.wikipedia.org/wiki/Levenshtein_distance
-[3]: http://bevacqua.github.io/horsey
Index: node_modules/simple-jekyll-search/.travis.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/.travis.yml	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/.travis.yml	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,12 +0,0 @@
-language: node_js
-sudo: false
-node_js:
-- '0.11'
-- '0.12'
-script:
-- npm run build
-deploy:
-  provider: npm
-  email: crifei93@gmail.com
-  api_key:
-    secure: JQwJYppw11Gmu6Pcp5Pcl1HAX4S6g4ib/voLFI4IT9n1KRhzjXR03UufU61T7wybRAkTg2IfUi/T7IFB7Ey8c3U7jqK1LZBuGMMYGNgygzwClGaLrKlKshKnFGYRfB6UOHBV5zFGB0mtDxtiZohtdT9d/jWom6V4DpvAFUjwS0Y=
Index: node_modules/fuzzysearch/.jshintrc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/fuzzysearch/.jshintrc	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/fuzzysearch/.jshintrc	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,21 +0,0 @@
-{
-  "curly": true,
-  "eqeqeq": true,
-  "newcap": true,
-  "noarg": true,
-  "noempty": true,
-  "nonew": true,
-  "sub": true,
-  "validthis": true,
-  "undef": true,
-  "trailing": true,
-  "boss": true,
-  "eqnull": true,
-  "strict": true,
-  "immed": true,
-  "expr": true,
-  "latedef": "nofunc",
-  "quotmark": "single",
-  "indent": 2,
-  "node": true
-}
Index: node_modules/fuzzysearch/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/fuzzysearch/index.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/fuzzysearch/index.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,24 +0,0 @@
-'use strict';
-
-function fuzzysearch (needle, haystack) {
-  var tlen = haystack.length;
-  var qlen = needle.length;
-  if (qlen > tlen) {
-    return false;
-  }
-  if (qlen === tlen) {
-    return needle === haystack;
-  }
-  outer: for (var i = 0, j = 0; i < qlen; i++) {
-    var nch = needle.charCodeAt(i);
-    while (j < tlen) {
-      if (haystack.charCodeAt(j++) === nch) {
-        continue outer;
-      }
-    }
-    return false;
-  }
-  return true;
-}
-
-module.exports = fuzzysearch;
Index: node_modules/fuzzysearch/CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/fuzzysearch/CHANGELOG.md	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/fuzzysearch/CHANGELOG.md	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,18 +0,0 @@
-# v1.0.3 Short Fuse
-
-- Improved circuit-breaker when `needle` and `haystack` length are equal
-
-# v1.0.2 Vodka Tonic
-
-- Slightly updated circuit-breaker that tests for equal length first
-- Doubled method performance ([see jsperf tests](http://jsperf.com/fuzzysearch-regex/3))
-
-# v1.0.1 Circuit Breaker
-
-- Introduced a circuit-breaker where queries longer than the searched string will return `false`
-- Introduced a circuit-breaker where queries identical to the searched string will return `true`
-- Introduced a circuit-breaker where text containing the entire query will return `true`
-
-# v1.0.0 IPO
-
-- Initial Public Release
Index: node_modules/fuzzysearch/.editorconfig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/fuzzysearch/.editorconfig	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/fuzzysearch/.editorconfig	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,13 +0,0 @@
-# editorconfig.org
-root = true
-
-[*]
-indent_style = space
-indent_size = 2
-end_of_line = lf
-charset = utf-8
-trim_trailing_whitespace = true
-insert_final_newline = true
-
-[*.md]
-trim_trailing_whitespace = false
Index: node_modules/simple-jekyll-search/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/README.md	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/README.md	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,255 +0,0 @@
-Simple-Jekyll-Search
-====================
-
-[![Build Status](https://travis-ci.org/christian-fei/Simple-Jekyll-Search.svg?branch=master)](https://travis-ci.org/christian-fei/Simple-Jekyll-Search)
-
-A JavaScript library to add search functionality to any Jekyll blog.
-
-Find it on [npmjs.com](https://www.npmjs.com/package/simple-jekyll-search)
-
----
-
-idea from this [blog post](https://alexpearce.me/2012/04/simple-jekyll-searching/#disqus_thread)
-
----
-
-# Install
-
-```
-bower install --save simple-jekyll-search
-# or
-npm install --save simple-jekyll-search
-```
-
-
-
-
-# Getting started
-
-Place the following code in a file called `search.json` in the **root** of your Jekyll blog.
-
-This file will be used as a small data source to perform the searches on the client side:
-
-```
----
----
-[
-  {% for post in site.posts %}
-    {
-      "title"    : "{{ post.title | escape }}",
-      "category" : "{{ post.category }}",
-      "tags"     : "{{ post.tags | join: ', ' }}",
-      "url"      : "{{ site.baseurl }}{{ post.url }}",
-      "date"     : "{{ post.date }}"
-    } {% unless forloop.last %},{% endunless %}
-  {% endfor %}
-]
-```
-
-You need to place the following code within the layout where you want the search to appear. (See the configuration section below to customize it)
-
-For example in  **_layouts/default.html**:
-
-```
-<!-- Html Elements for Search -->
-<div id="search-container">
-<input type="text" id="search-input" placeholder="search...">
-<ul id="results-container"></ul>
-</div>
-
-<!-- Script pointing to jekyll-search.js -->
-<script src="{{ site.baseurl }}/bower_components/simple-jekyll-search/dest/jekyll-search.js" type="text/javascript"></script>
-```
-
-
-# Configuration
-
-Customize SimpleJekyllSearch by passing in your configuration options:
-
-```
-SimpleJekyllSearch({
-  searchInput: document.getElementById('search-input'),
-  resultsContainer: document.getElementById('results-container'),
-  json: '/search.json',
-})
-```
-
-#### searchInput (Element) [required]
-
-The input element on which the plugin should listen for keyboard event and trigger the searching and rendering for articles.
-
-
-#### resultsContainer (Element) [required]
-
-The container element in which the search results should be rendered in. Typically an `<ul>`.
-
-
-#### json (String|JSON) [required]
-
-You can either pass in an URL to the `search.json` file, or the results in form of JSON directly, to save one round trip to get the data.
-
-
-#### searchResultTemplate (String) [optional]
-
-The template of a single rendered search result.
-
-The templating syntax is very simple: You just enclose the properties you want to replace with curly braces.
-
-E.g.
-
-The template
-
-```
-<li><a href="{url}">{title}</a></li>
-```
-
-will render to the following
-
-```
-<li><a href="/jekyll/update/2014/11/01/welcome-to-jekyll.html">Welcome to Jekyll!</a></li>
-```
-
-If the `search.json` contains this data
-
-```
-[
-    {
-      "title"    : "Welcome to Jekyll!",
-      "category" : "",
-      "tags"     : "",
-      "url"      : "/jekyll/update/2014/11/01/welcome-to-jekyll.html",
-      "date"     : "2014-11-01 21:07:22 +0100"
-    }
-]
-```
-
-
-#### templateMiddleware (Function) [optional]
-
-A function that will be called whenever a match in the template is found.
-
-It gets passed the current property name, property value, and the template.
-
-If the function returns a non-undefined value, it gets replaced in the template.
-
-This can be potentially useful for manipulating URLs etc.
-
-Example:
-
-```
-SimpleJekyllSearch({
-  ...
-  middleware: function(prop, value, template){
-    if( prop === 'bar' ){
-      return value.replace(/^\//, '')
-    }
-  }
-  ...
-})
-```
-
-See the [tests](src/Templater.test.js) for an in-depth code example
-
-
-
-#### noResultsText (String) [optional]
-
-The HTML that will be shown if the query didn't match anything.
-
-
-#### limit (Number) [optional]
-
-You can limit the number of posts rendered on the page.
-
-
-#### fuzzy (Boolean) [optional]
-
-Enable fuzzy search to allow less restrictive matching.
-
-#### exclude (Array) [optional]
-
-Pass in a list of terms you want to exclude (terms will be matched against a regex, so urls, words are allowed).
-
-
-
-
-
-
-
-## Enabling full-text search
-
-Replace 'search.json' with the following code:
-
-```
----
-layout: null
----
-[
-  {% for post in site.posts %}
-    {
-      "title"    : "{{ post.title | escape }}",
-      "category" : "{{ post.category }}",
-      "tags"     : "{{ post.tags | join: ', ' }}",
-      "url"      : "{{ site.baseurl }}{{ post.url }}",
-      "date"     : "{{ post.date }}",
-      "content"  : "{{ post.content | strip_html | strip_newlines }}"
-    } {% unless forloop.last %},{% endunless %}
-  {% endfor %}
-  ,
-  {% for page in site.pages %}
-   {
-     {% if page.title != nil %}
-        "title"    : "{{ page.title | escape }}",
-        "category" : "{{ page.category }}",
-        "tags"     : "{{ page.tags | join: ', ' }}",
-        "url"      : "{{ site.baseurl }}{{ page.url }}",
-        "date"     : "{{ page.date }}",
-        "content"  : "{{ page.content | strip_html | strip_newlines }}"
-     {% endif %}
-   } {% unless forloop.last %},{% endunless %}
-  {% endfor %}
-]
-```
-
-
-
-## If search isn't working due to invalid JSON
-
-- There is a filter plugin in the _plugins folder which should remove most characters that cause invalid JSON. To use it, add the simple_search_filter.rb file to your _plugins folder, and use `remove_chars` as a filter.
-
-For example: in search.json, replace
-```
-"content"  : "{{ page.content | strip_html | strip_newlines }}"
-```
-with
-```
-"content"  : "{{ page.content | strip_html | strip_newlines | remove_chars | escape }}"
-```
-
-If this doesn't work when using Github pages you can try ```jsonify``` to make sure the content is json compatible:
-```
-"content"   : {{ page.content | jsonify }}
-```
-**Note: you don't need to use quotes ' " ' in this since ```jsonify``` automatically inserts them.**
-
-
-
-
-
-##Browser support
-
-Browser support should be about IE6+ with this `addEventListener` [shim](https://gist.github.com/eirikbacker/2864711#file-addeventlistener-polyfill-js)
-
-
-
-
-
-
-
-# Dev setup
-
-- `npm install` the dependencies.
-
-- `gulp watch` during development
-
-- `npm test` or `npm run test-watch` to run the unit tests
Index: node_modules/fuzzysearch/LICENSE
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/fuzzysearch/LICENSE	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/fuzzysearch/LICENSE	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,20 +0,0 @@
-The MIT License (MIT)
-
-Copyright © 2015 Nicolas Bevacqua
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of
-this software and associated documentation files (the "Software"), to deal in
-the Software without restriction, including without limitation the rights to
-use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-the Software, and to permit persons to whom the Software is furnished to do so,
-subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Index: node_modules/simple-jekyll-search/src/OptionsValidator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/simple-jekyll-search/src/OptionsValidator.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/simple-jekyll-search/src/OptionsValidator.js	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,32 +0,0 @@
-'use strict'
-module.exports = function OptionsValidator (params) {
-  if (!validateParams(params)) {
-    throw new Error('-- OptionsValidator: required options missing')
-  }
-  if (!(this instanceof OptionsValidator)) {
-    return new OptionsValidator(params)
-  }
-
-  var requiredOptions = params.required
-
-  this.getRequiredOptions = function () {
-    return requiredOptions
-  }
-
-  this.validate = function (parameters) {
-    var errors = []
-    requiredOptions.forEach(function (requiredOptionName) {
-      if (parameters[requiredOptionName] === undefined) {
-        errors.push(requiredOptionName)
-      }
-    })
-    return errors
-  }
-
-  function validateParams (params) {
-    if (!params) {
-      return false
-    }
-    return params.required !== undefined && params.required instanceof Array
-  }
-}
Index: node_modules/fuzzysearch/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- node_modules/fuzzysearch/package.json	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
+++ node_modules/fuzzysearch/package.json	(revision 69da88efaaed39e89a2c604d75f20b599eb93716)
@@ -1,83 +0,0 @@
-{
-  "_args": [
-    [
-      {
-        "raw": "fuzzysearch@^1.0.3",
-        "scope": null,
-        "escapedName": "fuzzysearch",
-        "name": "fuzzysearch",
-        "rawSpec": "^1.0.3",
-        "spec": ">=1.0.3 <2.0.0",
-        "type": "range"
-      },
-      "/Users/liko/Dropbox/WebstormProjects/blog/likonion.github.io/node_modules/simple-jekyll-search"
-    ]
-  ],
-  "_from": "fuzzysearch@>=1.0.3 <2.0.0",
-  "_id": "fuzzysearch@1.0.3",
-  "_inCache": true,
-  "_location": "/fuzzysearch",
-  "_nodeVersion": "0.10.26",
-  "_npmUser": {
-    "name": "bevacqua",
-    "email": "nicolasbevacqua@gmail.com"
-  },
-  "_npmVersion": "2.6.0",
-  "_phantomChildren": {},
-  "_requested": {
-    "raw": "fuzzysearch@^1.0.3",
-    "scope": null,
-    "escapedName": "fuzzysearch",
-    "name": "fuzzysearch",
-    "rawSpec": "^1.0.3",
-    "spec": ">=1.0.3 <2.0.0",
-    "type": "range"
-  },
-  "_requiredBy": [
-    "/simple-jekyll-search"
-  ],
-  "_resolved": "https://registry.npmjs.org/fuzzysearch/-/fuzzysearch-1.0.3.tgz",
-  "_shasum": "dffc80f6d6b04223f2226aa79dd194231096d008",
-  "_shrinkwrap": null,
-  "_spec": "fuzzysearch@^1.0.3",
-  "_where": "/Users/liko/Dropbox/WebstormProjects/blog/likonion.github.io/node_modules/simple-jekyll-search",
-  "author": {
-    "name": "Nicolas Bevacqua",
-    "email": "ng@bevacqua.io",
-    "url": "http://bevacqua.io"
-  },
-  "bugs": {
-    "url": "https://github.com/bevacqua/fuzzysearch/issues"
-  },
-  "dependencies": {},
-  "description": "Tiny and blazing-fast fuzzy search in JavaScript",
-  "devDependencies": {
-    "jshint": "^2.6.0",
-    "tape": "^3.5.0"
-  },
-  "directories": {},
-  "dist": {
-    "shasum": "dffc80f6d6b04223f2226aa79dd194231096d008",
-    "tarball": "https://registry.npmjs.org/fuzzysearch/-/fuzzysearch-1.0.3.tgz"
-  },
-  "gitHead": "1f4d8d779611544e3b165344a998ed0641e317ef",
-  "homepage": "https://github.com/bevacqua/fuzzysearch",
-  "license": "MIT",
-  "maintainers": [
-    {
-      "name": "bevacqua",
-      "email": "nicolasbevacqua@gmail.com"
-    }
-  ],
-  "name": "fuzzysearch",
-  "optionalDependencies": {},
-  "readme": "ERROR: No README data found!",
-  "repository": {
-    "type": "git",
-    "url": "git://github.com/bevacqua/fuzzysearch.git"
-  },
-  "scripts": {
-    "test": "jshint . && tape test/*.js"
-  },
-  "version": "1.0.3"
-}
